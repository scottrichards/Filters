<?xml version="1.0" encoding="utf-8"?>
<s:Rect xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" left="0" right="0" top="0" bottom="0">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.filters.ColorMatrixFilter;
			
			[Bindable]
			public var imageClass : Class;
						
			private function createColorMatrix(red : Number, green : Number, blue : Number):Array {	
				var matrix:Array = new Array();
				matrix = matrix.concat([Number(red), 0, 0, 0, 0]); // red
				matrix = matrix.concat([0, Number(green), 0, 0, 0]); // green
				matrix = matrix.concat([0, 0, Number(blue), 0, 0]); // blue
				matrix = matrix.concat([0, 0, 0, 1, 0]); // alpha
				return matrix;
			}
			
			private function applyFilter( matrix:Array):void {
				var filter:ColorMatrixFilter = new ColorMatrixFilter(matrix);
				var filters:Array = new Array();
				filters.push(filter);
				this.filters = filters;
			}
			
			public function hexToRGB(hex:Number):Object
			{
				var rgbObj:Object = {
					red: ((hex & 0xFF0000) >> 16) / 255,
					green: ((hex & 0x00FF00) >> 8) / 255,
					blue: ((hex & 0x0000FF)) / 255
				};
				
				return rgbObj;
			}
			
			public function stringToHexInt(hexString : String):int
			{
				return parseInt(hexString,16);
			}
			
			public function applyHexColor(hexString : String):void
			{
				var rgb : Object = hexToRGB(stringToHexInt(hexString));
				applyColor(rgb.red,rgb.green,rgb.blue);
			}
			
			public function applyColor(red : Number, green : Number, blue : Number):void
			{
				var colorMatrix : Array = createColorMatrix(red,green,blue);
				applyFilter(colorMatrix);
			}
			
			public function setBackgroundImage(imageClass : Class):void
			{
				backgroundTileFile.source = imageClass;
			}
		]]>
	</fx:Script>
	
	<s:fill >
		<s:BitmapFill id="backgroundTileFile" source="@Embed('assets/patterns/seamless_paper_texture.png')" fillMode="repeat" />
	</s:fill>
</s:Rect>
